package co.uk.offerland.job_track.infrastructure.controller;import org.springframework.http.ResponseEntity;import org.springframework.security.core.annotation.AuthenticationPrincipal;import org.springframework.security.oauth2.jwt.Jwt;import org.springframework.validation.annotation.Validated;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import co.uk.offerland.job_track.application.dto.user.UserCreateRequest;import co.uk.offerland.job_track.application.dto.user.UserCreateResponse;import co.uk.offerland.job_track.application.usecases.user.CreateUserUseCase;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import reactor.core.publisher.Mono;@Slf4j@RequiredArgsConstructor@RestController@Validated@RequestMapping("/api/users")public class AuthController {    private final CreateUserUseCase userService;    @PostMapping("/register")    public Mono<ResponseEntity<UserCreateResponse>> registerUserId(@RequestBody UserCreateRequest request, @AuthenticationPrincipal Jwt jwt) {        String email = jwt.getClaim("email");        String fullName = jwt.getClaim("name");        log.info("Email from token: {}, Name from token: {}", email, fullName);        log.info("Income create user request: {}", request);        return userService.createNewUser(request.getUserId(), email, fullName)                .map(response -> ResponseEntity.ok(response));    }}