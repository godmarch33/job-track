package co.uk.offerland.job_track.application.usecases.user;import co.uk.offerland.job_track.application.dto.user.UserCreateResponse;import co.uk.offerland.job_track.domain.entity.UserEntity;import co.uk.offerland.job_track.infrastructure.persistence.r2dbc.UserR2dbcRepository;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;import org.springframework.stereotype.Service;import reactor.core.publisher.Mono;import java.time.Instant;@Slf4j@Service@RequiredArgsConstructorpublic class CreateUserUseCase {    private final UserR2dbcRepository userRepository;    public Mono<UserCreateResponse> createNewUser(String source) {        UserEntity newUser = new UserEntity();        newUser.setSource(source);        newUser.setCreatedAt(Instant.now());        newUser.setUpdatedAt(Instant.now());        return userRepository.save(newUser)                .map(entity -> new UserCreateResponse(entity.getId().toString()))                .doOnNext(response -> log.info("New user saved successfully userId:[{}]", response.getUserId()));    }}