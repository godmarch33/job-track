package co.uk.offerland.job_track.application.usecases.phase;import java.util.List;import java.util.UUID;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import co.uk.offerland.job_track.application.dto.phase.ListPhaseResponse;import co.uk.offerland.job_track.application.query.JobQueryService;import co.uk.offerland.job_track.domain.entity.JobEntity;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;@Slf4j@Service@RequiredArgsConstructorpublic class ListAvailablePhasesUseCase {    private final JobQueryService jobQueryService;    @Transactional(readOnly = true)    public ListPhaseResponse listAvailablePhases(UUID userId, UUID jobId) {        JobEntity job = jobQueryService.getJobByUserIdAndJobId(userId, jobId);        List<String> availablePhases = job.getAvailablePhases().stream().toList();        log.info("Available phases retrieved: {}", availablePhases);        return new ListPhaseResponse(availablePhases);    }}