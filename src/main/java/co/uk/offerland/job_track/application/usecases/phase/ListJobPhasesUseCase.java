package co.uk.offerland.job_track.application.usecases.phase;import java.util.List;import java.util.UUID;import org.springframework.stereotype.Service;import org.springframework.transaction.annotation.Transactional;import co.uk.offerland.job_track.application.dto.phase.PhaseResponse;import co.uk.offerland.job_track.application.dto.phase.AddPhasesResponse;import co.uk.offerland.job_track.application.query.JobQueryService;import co.uk.offerland.job_track.domain.entity.JobEntity;import co.uk.offerland.job_track.infrastructure.converter.JobConverter;import lombok.RequiredArgsConstructor;import lombok.extern.slf4j.Slf4j;@Slf4j@Service@RequiredArgsConstructorpublic class ListJobPhasesUseCase {    private final JobQueryService jobQueryService;    private final JobConverter jobConverter;    public AddPhasesResponse listPhases(UUID userId, UUID jobId) {//        JobEntity job = jobQueryService.getJobByUserIdAndJobId(userId, jobId);////        List<PhaseResponse> addPhaseResponses =//            job.getPhases().stream().map(phase -> jobConverter.toResponse(phase)).toList();////        log.info("JobId: {} has retrieved phases :{}", job, addPhaseResponses);//        return new AddPhasesResponse(addPhaseResponses);        return null;    }}