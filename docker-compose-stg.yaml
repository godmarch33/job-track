services:

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: VerySecretPassword1986
      MONGO_INITDB_DATABASE: job-track
    volumes:
      - mongo_data:/data/db
    networks:
      - dev_network

  faiss-api:
    image: faiss-faiss-api:latest
    container_name: faiss-api
    ports:
      - "8001:8001"
    volumes:
      - ./faiss_data:/app/faiss_data
      - /home/deploy/faiss/app:/app
    environment:
      - PYTHONUNBUFFERED=1
    restart: always
    networks:
      - dev_network

  job-track-original:
    image: jobtrack:latest
    container_name: job-track-original
    depends_on:
      - mongodb
    environment:
      - SPRING_PROFILES_ACTIVE=stg
      - SEARCH_SERVICE_URL=http://faiss-api:8001
      - OPEN_API_KEY=${OPEN_API_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - SPRING_DATA_MONGODB_URI=mongodb://admin:VerySecretPassword1986@mongodb:27017/job-track?authSource=admin
      - SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK-SET-URI=http://keycloak:8080/realms/offerland-realm-app/protocol/openid-connect/certs
      - SPRING_SSL_ENABLED=false
      - SPRING_SSL_CERTIFICATE=/etc/ssl/certs/xpatjob.co.uk.crt
      - SPRING_SSL_CERTIFICATE_PRIVATE_KEY=/etc/ssl/certs/private.key
      - SPRING_SSL_TRUST_CERTIFICATE=/etc/ssl/certs/xpatjob.co.uk.ca-bundle.crt
    ports:
      - "8088:8088"
    volumes:
      - /home/deploy/data:/app/files
      - /home/deploy/certs:/etc/ssl/certs
    pull_policy: never
    networks:
      - dev_network

  postgres:
    image: postgres:latest
    container_name: postgres-db
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=superKeycloak!123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data1:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dev_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    command: start-dev --http-enabled=true --proxy-headers=xforwarded
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=superKeycloak!123
      - KC_BOOTSTRAP_ADMIN_USERNAME=admin
      - KC_BOOTSTRAP_ADMIN_PASSWORD=superAdmin!123
      - KC_PROXY=edge
      - KC_HOSTNAME=xpatjob.co.uk
      - KC_HOSTNAME_URL=https://xpatjob.co.uk
      - KC_HOSTNAME_ADMIN_URL=https://xpatjob.co.uk
      - KC_HOSTNAME_STRICT=false
      - KEYCLOAK_FRONTEND_URL=https://xpatjob.co.uk
      - KC_PROXY_HEADERS=xforwarded
      - KC_CACHE_THEMES=false
      - KC_CACHE_TEMPLATES=false
      - KC_STATIC_MAX_AGE=-1
    expose:
      - "8080:8080"
    volumes:
      - /home/deploy/certs:/opt/keycloak/certs
      - /home/deploy/offerland:/opt/keycloak/themes/offerland
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dev_network

  nginx:
    image: nginx:latest
    container_name: nginx-ssl
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /home/deploy/nginx/nginx.conf:/etc/nginx/nginx.conf
      - /home/deploy/certs:/etc/nginx/certs
    networks:
      - dev_network
    depends_on:
      - keycloak
      - job-track-original

  umami:
    image: ghcr.io/umami-software/umami:postgresql-latest
    container_name: umami
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://umami:superUmami!123@postgres-db:5432/umami
      DATABASE_TYPE: postgresql
      APP_SECRET: superUmami!123
    depends_on:
      postgres:
        condition: service_healthy
    init: true
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl http://localhost:3000/api/heartbeat" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - dev_network

  telegram-bot:
    image: telegram-bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    restart: unless-stopped
    networks:
      - dev_network

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
    - KAFKA_CFG_NODE_ID=1
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
    - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    volumes:
      - kraft-data:/tmp/kraft-combined-logs
    networks:
      - dev_network


volumes:
  mongo_data:
    driver: local
  postgres_data1:
    driver: local
  kraft-data:
    driver: local
networks:
  dev_network:
    driver: bridge
