name: Build and Deploy Job-Track App

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> $GITHUB_ENV
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV  
          echo "OPEN_API_KEY=${{ secrets.OPEN_API_KEY }}" >> $GITHUB_ENV
          echo "SEARCH_SERVICE_URL=${{ secrets.SEARCH_SERVICE_URL }}" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> $GITHUB_ENV
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Set OpenAI API Key as Environment Variable
        run: echo "OPEN_API_KEY=${{ secrets.OPEN_API_KEY }}" >> $GITHUB_ENV

      - name: Grant execute permissions to Gradle Wrapper
        run: chmod +x gradlew

      - name: Build JAR File
        run: ./gradlew clean build -x test

      - name: Copy docker-compose-prod.yaml to Server using SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "5522"
          source: "docker-compose-stg.yaml"
          target: "/home/deploy/job-track/"

      - name: Build Docker Image
        run: |
          ls -al
          docker build -t ${{ secrets.DOCKER_IMAGE_NAME }} .
          docker save -o ./app-image.tar ${{ secrets.DOCKER_IMAGE_NAME }}

      - name: Upload Docker Image as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ./app-image.tar

  deploy:
    name: Deploy to On-Prem Server
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Docker Image Artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image

      - name: Copy Docker Image to Server using SCP
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "5522"
          source: "app-image.tar"
          target: "/home/deploy/job-track"

      - name: List Directory Contents
        run: |
          ls -al

      - name: Copy SSL Certificates to Server
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "5522"
          source: "src/main/resources/ssl"
          target: "/home/deploy/certs/"

      - name: Export Environment Variables
        run: |
          echo "MONGO_USER=${{ secrets.MONGO_USER }}" >> $GITHUB_ENV
          echo "MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }}" >> $GITHUB_ENV
          echo "MONGO_DB=${{ secrets.MONGO_DB }}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=${{ secrets.DOCKER_IMAGE_NAME }}" >> $GITHUB_ENV
          echo "OPEN_API_KEY=${{ secrets.OPEN_API_KEY }}" >> $GITHUB_ENV
          echo "SEARCH_SERVICE_URL=${{ secrets.SEARCH_SERVICE_URL }}" >> $GITHUB_ENV
          echo "SPRING_PROFILES_ACTIVE=${{ secrets.SPRING_PROFILES_ACTIVE }}" >> $GITHUB_ENV

      - name: Deploy on On-Prem Server via SSH
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: "5522"
          script: |
            set -e
            export MONGO_USER="${{ secrets.MONGO_USER }}"
            export MONGO_PASSWORD="${{ secrets.MONGO_PASSWORD }}"
            export MONGO_DB="${{ secrets.MONGO_DB }}"
            export DOCKER_IMAGE_NAME="${{ secrets.DOCKER_IMAGE_NAME }}"
            export OPEN_API_KEY="${{ secrets.OPEN_API_KEY }}"
            export SEARCH_SERVICE_URL="${{ secrets.SEARCH_SERVICE_URL }}"
            export SPRING_PROFILES_ACTIVE="${{ secrets.SPRING_PROFILES_ACTIVE }}"
            export SPRING_SSL_ENABLED=true
            export SPRING_SSL_CERTIFICATE=/etc/ssl/certs/xpatjob.co.uk.crt
            export SPRING_SSL_CERTIFICATE_PRIVATE_KEY=/etc/ssl/private/private.key
            export SPRING_SSL_TRUST_CERTIFICATE=/etc/ssl/certs/xpatjob.co.uk.ca-bundle.crt
            
            docker rmi -f "$DOCKER_IMAGE_NAME" || true
            docker load -i /home/deploy/job-track/app-image.tar
            
            # Ensure SSL certificates are in the right place
            mkdir -p /etc/ssl/certs /etc/ssl/private
            cp /home/deploy/certs/xpatjob.co.uk.crt /etc/ssl/certs/
            cp /home/deploy/certs/xpatjob.co.uk.ca-bundle.crt /etc/ssl/certs/
            cp /home/deploy/certs/private.key /etc/ssl/private/
            
            cd /home/deploy/job-track
            
            docker compose -f docker-compose-stg.yaml down --remove-orphans
            
            docker compose -f docker-compose-stg.yaml up -d --build
